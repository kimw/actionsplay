name: Build and Deploy

env:
  PKG_NAME: shadowsocks-rust
  PKG_VERSION: 1.15.3
  PKG_RELEASE: "1"

on:
  push:
    branches:
      - main

jobs:
  prepaire-source-code:
    runs-on: ubuntu-latest
    steps:
      - run: cat /etc/os-release

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download source code archive
        run: |-
          tarball_url="https://github.com/shadowsocks/${PKG_NAME}/archive/refs/tags/v${PKG_VERSION}.tar.gz"
          tarball_path="${PKG_NAME}-${PKG_VERSION}.tar.gz"

          wget --no-verbose "$tarball_url" &&
          tar -xf "v${PKG_VERSION}.tar.gz" &&
          test -d "${PKG_NAME}-${PKG_VERSION}" &&
          mv -v "${PKG_NAME}-${PKG_VERSION}" "${PKG_NAME}"

      - name: Patching
        run: |-
          for fname in src/*.patch; do
            patch -p1 -i "$fname"
          done

      - run: pwd ; ls -lAF

      - name: Archive prepaired source code
        uses: actions/upload-artifact@v2
        with:
          name: prepaired-source-code
          path: shadowsocks-rust
          if-no-files-found: error

  build-x86_64-gnu:
    runs-on: ubuntu-latest
    needs: prepaire-source-code
    steps:
      - name: Print version info for debugging
        run: |
          cat /etc/os-release &&
          gcc --version &&
          rustup --version &&
          rustup default &&
          rustc --version &&
          cargo --version

      - name: Download prepaired source code
        uses: actions/download-artifact@v2
        with:
          name: prepaired-source-code
      - run: pwd ; ls -lAF
  
      - name: Install cargo-deb tool
        run: |
          curl -sL https://xdeb.gitlab.io/cargo-deb/cargo-deb_bullseye_amd64.gz | gzip -d > /usr/local/bin/cargo-deb
          chmod 755 /usr/local/bin/cargo-deb
  
      - name: Build the project on Debian
        run: cargo build --target=x86_64-unknown-linux-gnu --release --features="local-redir,local-dns,local-tun"

      # - run: cargo test --workspace --target=x86_64-unknown-linux-gnu --release

      - name: Package output as .deb
        run: cargo deb --target=x86_64-unknown-linux-gnu --deb-version="${PKG_VERSION}-${PKG_RELEASE}-xdeb" --output=./dist/

      - name: TODO
        run: |
          pwd
          ls -lAF ./target/x86_64-unknown-linux-gnu/release/
          install -Dv -t ./dist/x86_64-gnu/ \
               ./target/x86_64-unknown-linux-gnu/release/sslocal \
               ./target/x86_64-unknown-linux-gnu/release/ssmanager \
               ./target/x86_64-unknown-linux-gnu/release/ssserver \
               ./target/x86_64-unknown-linux-gnu/release/ssservice \
               ./target/x86_64-unknown-linux-gnu/release/ssurl

      - run: ls -lAFR ./dist/

      - name: Archive prepaired source code
        uses: actions/upload-artifact@v2
        with:
          name: output-x86_64-gnu
          path: dist
          if-no-files-found: error

  build-i686-gnu:
    runs-on: ubuntu-latest
    needs: prepaire-source-code
    steps:
      - name: Print version info for debugging
        run: |
          cat /etc/os-release &&
          gcc --version &&
          rustup --version &&
          rustup default &&
          rustc --version &&
          cargo --version

      - name: Download prepaired source code
        uses: actions/download-artifact@v2
        with:
          name: prepaired-source-code
      - run: pwd ; ls -lAF
  
      - name: Install cargo-deb tool
        run: |
          curl -sL https://xdeb.gitlab.io/cargo-deb/cargo-deb_bullseye_amd64.gz | gzip -d > /usr/local/bin/cargo-deb
          chmod 755 /usr/local/bin/cargo-deb

      - name: Install cross compiling dependency
        run: |
          sudo apt-get update
          sudo apt-get install --yes gcc-multilib

      - run: rustup target add i686-unknown-linux-gnu

      - name: Build the project on Debian
        run: cargo build --target=i686-unknown-linux-gnu --release --features="local-redir,local-dns,local-tun"

      # - run: cargo test --workspace --target=i686-unknown-linux-gnu --release

      - name: Package output as .deb
        run: cargo deb --target=i686-unknown-linux-gnu --deb-version="${PKG_VERSION}-${PKG_RELEASE}-xdeb" --output=./dist/

      - name: TODO
        run: |
          pwd
          ls -lAF ./target/x86_64-unknown-linux-gnu/release/
          install -Dv -t ./dist/x86_64-gnu/ \
               ./target/x86_64-unknown-linux-gnu/release/sslocal \
               ./target/x86_64-unknown-linux-gnu/release/ssmanager \
               ./target/x86_64-unknown-linux-gnu/release/ssserver \
               ./target/x86_64-unknown-linux-gnu/release/ssservice \
               ./target/x86_64-unknown-linux-gnu/release/ssurl

      - run: ls -lAFR ./dist/

      - name: Archive prepaired source code
        uses: actions/upload-artifact@v2
        with:
          name: output-i686-gnu
          path: dist
          if-no-files-found: error

  publish-pages:
    runs-on: ubuntu-latest
    needs:
      - build-x86_64-gnu
      - build-i686-gnu
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Copy the output
        run: |
          pwd
          ls -lAF
          mkdir -p public/ubuntu
          cp -r /out/path1 public/ubuntu
          mkdir -p public/debian
          cp -r /out/path2 public/debian
          mkdir -p public/alpine
          cp -r /out/path3 public/alpine

      - name: Publish the pages
        run: hugo -d public
